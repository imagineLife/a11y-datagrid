@import "neat/neat";

$gt-mobile: (
  columns: 12,
  gutter: 1rem,
  media: 40.0625em,
);

@mixin flexible() {
  display: flex;
  justify-content: space-around;
  > * {
    &:not(:last-child) {
      margin-right: 1rem;
    }
  }
}

%flexible {
  @include flexible;
}

* {
  box-sizing: border-box;
}

body {
  //display: grid;
  //grid-template-rows: min-content;

  //padding: .5rem;
  margin: 0;

  @include grid-media($gt-mobile) {
    padding: 1rem;
    max-height: 100vh;
    overflow-y: hidden;

    display: flex;
    flex-direction: column;
  }


}

/* System Fonts as used by GitHub */
body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

body {

}

.small.caps {
  text-transform: uppercase;
  font-variant-caps: all-small-caps;
}

td.value {
  max-width: calc(100vw - 4rem); // #janky
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

#root {

  @include grid-media($gt-mobile) {
    display: grid;
    grid-template-rows: 100vh;

    display: flex;
    flex-direction: column;
  }

  > [data-reactroot] {
    //display: grid;
    //grid-template-rows: min-content 40vh min-content;

    @include grid-media($gt-mobile) {
      display: flex;
      flex-direction: column;
    }


    > header {
      flex: 1 0 auto;
      flex-wrap: wrap;
    }

    > nav {
      flex: 0 0 auto;
    }

    > table {
      @include grid-media($gt-mobile) {
        flex: 0 1 auto;
        display: flex;
        flex-direction: column;
      }
      tbody {
        @include grid-media($gt-mobile) {
          flex: 0 1 auto;
          display: flex;
          flex-direction: column;
          overflow-y: auto;

        }

      }
    }
  }
}

#per-page {
  min-width: 4em;
  max-width: 4em;
}

header {
  margin-bottom: 1rem;
}

header {
  @include grid-media($gt-mobile) {
    display: flex;
    justify-content: space-around;
  }
  margin-bottom: 1rem;

  > * {
    margin-left: auto;
    marign-right: auto;
    margin-bottom: 1rem;
    label {
      display: block;
      @include grid-media($gt-mobile) {
        display: inline-block;
      }
    }
    @include grid-media($gt-mobile) {
      margin-bottom: 0;
    }
    &:first-child {
      margin-left: 0;
    }
  }

  .search {
    @include grid-media($gt-mobile) {
      flex-basis: 12em;
      flex-grow: 1;
      max-width:18em;
      padding-left:1rem;
      padding-right:1rem;
      display: flex;
    }
    > div {
      flex-grow: 1;
      input {
        width: 100%;
      }
    }
  }

  /*display: grid;
  grid-template-columns: auto auto auto auto auto;
  grid-gap: 0;

  > * {
    &:last-child {
      align-self: end;
    }
  }*/

  .clear-submit {
    text-align: center;
    @include grid-media($gt-mobile) {
      text-align: right;
    }
    margin-left: auto;
    > * {
      &:not(:last-child) {
        margin-right: 1rem;
      }
    }
  }
}

table {
  display: grid;
  thead {
    @media screen and (max-width: 40em) {
      padding-top: 1rem;
      padding-bottom: 1rem;
    }
    text-align: left;
    tr {
      display: block;
    }
  }

  tbody {
    tr {
      display: block;
      @include grid-media($gt-mobile) {
        display: grid;
      }
      td {
        display: block;
        &:not(.update-setting) {
          @media screen and (max-width: 40em) {
            //padding-left: .5rem;
            //padding-right: .5rem;
          }
        }
      }
    }
  }
  thead, tbody {
    display: block;
    @include grid-media($gt-mobile) {
      display: grid;
    }

    tr {

      @include grid-media($gt-mobile) {
        display: grid;
        grid-template-columns: 2em 1fr 1fr 1fr 1fr 1fr;
        grid-template-areas: "select name name key value last-modified";
      }

    }
    th {
      display: block;
      &.select {
        grid-area: select;
        text-align: left;
        @include grid-media($gt-mobile) {
          text-align: center;
        }
      }
      &.name {
        grid-area: name;
      }
      &.key {
        grid-area: key;
      }
      &.value {
        grid-area: value;
      }
      &.last-modified {
        grid-area: last-modified;
        @include grid-media($gt-mobile) {
          text-align: right;
        }

      }
    }
  }
  tbody {
    border: 1px solid var(--border-color, rgb(220, 220, 220));
    tr {
      padding: .5rem;
      grid-template-columns: auto;
      grid-template-areas: "select" "name" "key" "value" "last-modified";
      @include grid-media($gt-mobile) {
        padding: .25rem 0;
        grid-template-columns: 2em 1fr 1fr 1fr 1fr 1fr;
        grid-template-areas: "select name name key value last-modified";
      }
      &:focus, &.focused {
        grid-template-areas: "select" "name" "key" "value" "last-modified" "actions";
        padding: 0;
        > td:not(.update-setting) {
          padding-bottom: .25rem;
        }
        @include grid-media($gt-mobile) {
          grid-template-areas: "select name name key value last-modified" "actions actions actions actions actions actions";
        }
        td.update-setting {
          display: block;
        }
      }

      --background-color: rgb(253, 253, 253);
      --border-color: rgb(245, 245, 245);

      background: var(--background, rgb(253, 253, 253));

      border-top: 1px solid var(--border-color, rgb(245, 245, 245));
      border-bottom: 1px solid var(--border-color, rgb(245, 245, 245));
      &:nth-of-type(even) {
        background: rgb(240, 240, 240);
        border-color: rgb(230, 230, 230);
      }
    }
    td {
      &.select {
        grid-area: select;
        text-align: left;
        @include grid-media($gt-mobile) {
          text-align: center;
        }
      }
      &.name {
        grid-area: name;
      }
      &.key {
        grid-area: key;
      }
      &.value {
        grid-area: value;
      }
      &.last-modified {
        grid-area: last-modified;

        @include grid-media($gt-mobile) {
          text-align: right;
        }
      }
      &.update-setting {
        --border-color: rgb(210, 210, 210);
        --background-color: rgb(180, 180, 180);

        padding: .5rem 0;

        display: none;
        grid-area: actions;
        background: var(--background-color, rgb(200, 200, 200));
        border-top: 1px solid rgb(160, 160, 160);
        border-bottom: 1px solid rgb(255, 255, 255);

        > .button-bar {
          > * {
            margin-bottom: 0;
          }
        }

      }
    }
  }
}

.namespace, .area, .xtype {
  @include grid-media($gt-mobile) {
    padding-left: .5rem;
    padding-right: .5rem;
  }
}

.flexible:not(.sometimes) {
  @extend %flexible;
}

.flexible.sometimes {
  @include grid-media($gt-mobile) {
    @include flexible;
  }
}

.page-of {
  @media (max-width: 40em) {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }
}

.flexible.pagination {
  //padding: 1rem 0;
  margin-top: 1rem;
  justify-content: flex-start;

  @include grid-media($gt-mobile) {
    @include flexible;
    order: 3;
  }

  .displaying:last-child {
    align-self: flex-end;
    margin-left: auto;
  }

  > .button-bar {

  }

  @media screen and (max-width: 40em) {
    --border-color: rgb(210, 210, 210);
    --background-color: rgb(220, 220, 220);
    --border-color-dark: rgb(160, 160, 160);
    --border-color-highlight: rgb(255, 255, 255);

    //color: rgb(250, 250, 250);



    background: var(--background-color, rgb(80, 80, 80));
    padding: 1rem;
    border-top: 1px solid var(--border-color-dark, rgb(160, 160, 160));
    border-bottom: 1px solid var(--border-color-highlight, rgb(255, 255, 255));
  }

  @media screen and (max-width: 40em) and (min-height: 40em) {
    position: sticky;
    top: 0;
    left: 0;
    right: 0;

    box-shadow: inset 0px 4px 10px -4px rgba(40,40,40,0.275), 0px 4px 6px -2px rgba(0,0,0,0.17275);
  }

}

.a11y-datagrid {
  @media (max-width: 40em) {
    padding-top: 1rem;
    padding-bottom: .5rem;
    > * {
      padding-left: .5rem;
      padding-right: .5rem;
    }
  }
}

.button-bar {
  > * {
    @media (max-width: 40em) {
      &:not([hidden]) {
        display: block;
      }
      margin:0 auto 1rem auto;
    }
  }
}

@mixin visually-hidden() {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding:0 !important;
  border:0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;
  body:hover & {
    a, input, button {
      display: none !important;
    }
  }
}

%visually-hidden {
  @include visually-hidden;
}

.visually-hidden:not(.sometimes) { /*https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html*/
  @include visually-hidden;
}

.visually-hidden.sometimes {
  @include grid-media($gt-mobile) {
    @include visually-hidden;
  }
}
